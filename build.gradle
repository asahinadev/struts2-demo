plugins {
	id 'war'
	id 'eclipse'
	id 'eclipse-wtp'
}

group = 'com.example.struts2'
version = '0.0.1'

sourceCompatibility = 11
targetCompatibility = 11

configurations {
	developmentOnly
	mybatisGenerator
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

repositories {
	mavenCentral()
}

dependencies {

// struts2
	implementation group: 'org.apache.struts', name: 'struts2-convention-plugin', version: '2.5.22'
	implementation group: 'org.apache.struts', name: 'struts2-config-browser-plugin', version: '2.5.22'
	implementation group: 'org.apache.struts', name: 'struts2-core', version: '2.5.22'
	implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
	implementation group: 'commons-io', name: 'commons-io', version: '2.6'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

// log4j2 
	implementation group: 'org.apache.logging.log4j', name: 'log4j-web', version: '2.13.3'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.13.3'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.13.3'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.3'

// database
	implementation group: 'org.flywaydb', name: 'flyway-core', version: '6.4.2'
	implementation group: 'org.mybatis', name: 'mybatis', version: '3.5.4'
	compileOnly    group: 'mysql', name: 'mysql-connector-java', version: '8.0.20'

// asm
	implementation group: 'org.ow2.asm', name: 'asm-commons', version: '8.0.1'
	implementation group: 'org.ow2.asm', name: 'asm-tree', version: '8.0.1'
	implementation group: 'org.ow2.asm', name: 'asm-analysis', version: '8.0.1'

// junit
	testImplementation group: 'junit', name: 'junit', version: '4.13'
	testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '2.2'
	
// lomboc
	compileOnly group: 'org.apache.tomcat', name: 'tomcat-catalina', version: '9.0.35'
	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.12'

// mybatisGenerator
	mybatisGenerator group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.4.0'
	mybatisGenerator group: 'mysql', name: 'mysql-connector-java', version: '8.0.20'
	mybatisGenerator group: 'com.softwareloop', name: 'mybatis-generator-lombok-plugin', version: '1.0'
	
}

eclipse.project {
	natures 'org.eclipse.jdt.core.javanature'
    natures 'org.springsource.ide.eclipse.gradle.core.nature'
}

eclipseJdt.doLast {
    File f = file('.settings/org.eclipse.core.resources.prefs')
    f.write('eclipse.preferences.version=1\n')
    f.append('encoding/<project>=UTF-8')
}

def targetProject = file "src/main/java"

task mybatisGenerator {
	group = 'mybatis'
	
	doLast {

		def properties = new Properties()
		file('mybatis-config/config.properties').withInputStream { inputStream ->
			properties.load(inputStream)
		}
		properties.setProperty('target.project', targetProject .getAbsolutePath())
		
		ant.properties['targetProject'] = properties.getProperty('target.project')
		ant.properties['driverClass']   = properties.getProperty('database.driver')
	    ant.properties['connectionURL'] = properties.getProperty('database.url')
	    ant.properties['userId']        = properties.getProperty('database.username')
	    ant.properties['password']      = properties.getProperty('database.password')
	    ant.properties['entity']        = properties.getProperty('package.entity')
	    ant.properties['mapper']        = properties.getProperty('package.mapper')
	    ant.taskdef(
	    	name: 'mbgenerator', 
	    	classname: 'org.mybatis.generator.ant.GeneratorAntTask', 
	    	classpath: configurations.mybatisGenerator.asPath
    	)

		println  ant.properties['targetProject']
		println  ant.properties['driverClass']   
		println  ant.properties['connectionURL'] 
		println  ant.properties['userId']        
		println  ant.properties['password']      
		println  ant.properties['entity']        
		println  ant.properties['mapper']        
		println  "" 
		println  "" 
		println  "" 
    	
	    ant.mbgenerator(
	    	overwrite: true, 
	    	configfile: file('mybatis-config/generator.xml'), 
	    	verbose: true
    	) {
			propertyset {
				propertyref(name: 'targetProject')
				propertyref(name: 'driverClass')
				propertyref(name: 'connectionURL')
				propertyref(name: 'userId')
				propertyref(name: 'password')
				propertyref(name: 'entity')
				propertyref(name: 'mapper')
			}
		}
	}
}

task dockerUp( type:Exec, dependsOn: [ clean, war ] ) {
	group 'docker'
	description 'docker-compose up'
	workingDir 'docker'
	environment COMPOSE_PROJECT_NAME: "struts2_demo"
	environment TOMCAT_HOME: "/usr/local/tomcat/current"
	commandLine 'docker-compose', 'up',	'-d', '--build'
}

task dockerDown( type:Exec ) {
	group 'docker'
	description 'docker-compose stop'
	workingDir 'docker'
	environment COMPOSE_PROJECT_NAME: "struts2_demo"
	commandLine 'docker-compose', 'down', '--rmi', 'local'
}

war {
	archiveName "struts2-example.war"
}
